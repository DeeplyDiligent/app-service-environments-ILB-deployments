variables:
  appEnvironmentName: 'production'
  appPath: code/function-app-ri/FunctionApp
  deploymentMethod: runFromPackage # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-function-app?view=azure-devops#deployment-methods


trigger:
  branches:
    include:
    - master
  paths:
    include:
    - $(appPath)


stages:
- stage: Build
  jobs:
  - job: VoteCounterAppBuild
    displayName: Vote Counter App Continous Integration
    pool:
      name: $(poolName)
    continueOnError: false
    steps:
    - task: UseDotNet@2
      displayName: 'Use .Net Core sdk 3.1.x'
      inputs:
        version: 3.1.x

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: $(appPath)/VoteCounter.csproj

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: $(appPath)/VoteCounter.csproj
        arguments: '--configuration $(BuildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: false
        workingDirectory: $(appPath)
        arguments: '--configuration release --output "$(build.artifactstagingdirectory)" --no-restore'
        zipAfterPublish: false

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        archiveFile: '$(build.artifactstagingdirectory)/votecounter-$(build.buildid).zip'
        rootFolderOrFile: '$(build.artifactstagingdirectory)'
        includeRootFolder: false
        archiveType: zip

    - task: PublishPipelineArtifact@1
      displayName: 'Publish Artifact'
      inputs:
        targetPath: '$(build.artifactstagingdirectory)/votecounter-$(build.buildid).zip'
        artifactName: 'drop'

- stage: DeployZone1
  dependsOn:
  - Build
  jobs:
  - deployment: VoteCounterAppZone1Deploy
    displayName: Vote Counter App Counter Zone 1 Continous Deployment
    pool:
      name: $(poolName)
    environment: $(appEnvironmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure Function App Deploy: votingfuncapp-1'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: functionApp
              appName: $(functionAppNameZone1)
              package: '$(Pipeline.Workspace)/drop/votecounter-$(build.buildid).zip'
              deploymentMethod: $(deploymentMethod)

- stage: DeployZone3
  dependsOn:
  - Build
  jobs:
  - deployment: VoteCounterAppZone3Deploy
    displayName: Vote Counter App Counter Zone 3 Continous Deployment
    pool:
      name: $(poolName)
    environment: $(appEnvironmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureFunctionApp@1
            displayName: 'Azure Function App Deploy: votingfuncapp-3'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: functionApp
              appName: $(functionAppNameZone3)
              package: '$(Pipeline.Workspace)/drop/votecounter-$(build.buildid).zip'
              deploymentMethod: $(deploymentMethod)
